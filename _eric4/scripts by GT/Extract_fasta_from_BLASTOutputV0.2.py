from sys import stdin,argv
##Aime of Extract_hit_name function is to create List of hit from a BLAST output that can then be used by the next function
## to extract the sequence corresponding to the fasta file 
def Extract_hit_name (BLASTOutput):
    """
    The BLASTOutput should be fmt6
    can implement the function later to make it work with other formats"""
    fh=open(BLASTOutput)
    #if outfmt == 6:
    ListHit=[]
    for line in fh :
        if line.strip().split('\t')[1] not in ListHit:
            ListHit.append(line.strip().split('\t')[1])
    print "%s hit Id found"%len(ListHit)
    return ListHit



##The aim of ExtractFastaSeq function is to extract seq from a fasta file and create a new fasta file

def ExtractFastaSeq (List, Fasta, output):
    """List is generated by the previous function
    Fasta is a path to a Fasta file, sequences from fasta will be extracted if they are in the List
    output is a path to an output file that will be created"""
    from Bio import SeqIO
    FastaFh=open(Fasta)
#    ListFh=open(List) # to erase if it works
#    SeqList=[element.strip() for element in ListFh] # to erase if it works
    Towrite=[seq 
    for seq in SeqIO.parse(FastaFh,'fasta')
    if seq.name in List] ##using a while statement might help to end the search as soon as all the sequence are found and thus will help save time
    print '%s sequences found'%(len(Towrite))
    print '%s sequences missing'%(len(List)-len(Towrite))
    outputfile=open(output, 'w')
    SeqIO.write(Towrite, outputfile, 'fasta')


ExtractFastaSeq(Extract_hit_name(argv[1]), argv[2], argv[3])
