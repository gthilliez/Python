##To_test
#function by G. Thilliez 2014
#The aim of this script is to write a report on a serie of MCL cluster output.
#For a series of MCL dump output, the script will get the name, the number of single prot and the number of  cluter
#It will save the report as a CSV with a header.
#info on the MCL cluster algorythm : http://micans.org/mcl/

def MCLdumpReport(directory='default', fileoutdir='default', fileoutname='default'):
    """directory should be a file directory that only contain dump output file generated by the MCL algorythm eg dump.name.I30 for a evalue of 3
    or out files generated by the MCL algorythm eg out.name.I30 for a evalue of 3
    fileoutname should be the name of the output file containing the report, fileoutdir should be the file directory defined for the output file
    by default directory and fileoutdir are the current working directory, by default fileoutname is a file called MCLdumpReport.csv """
    if directory=='default':
        import os
        directory=os.getcwd()
    if fileoutdir=='default':
        fileoutdir=os.getcwd()
    if fileoutname=='default':
        fileoutname='MCLdumpReport.csv'
    fileout=open(os.path.join(fileoutdir, fileoutname), 'w')
    print>>fileout,  ('Name,Clusters,Single_prot,Total')
    for file in os.listdir(directory):
        fh=open(file, 'r')
        Cluster=0
        Singleton=0
        name=fh.name
        evalue=fh.name.split('.')[1].split('evalue')[-1]
        Inflation_x10=fh.name.split('.')[-1]
        for line in fh:
            Length=len(line.strip().split('\t'))
            if Length>1:
                Cluster=Cluster+1
            else:
                Singleton=Singleton+1
        Total=Cluster+Singleton
        print>>fileout, ('%s,%s,%s,%s')%(name, Cluster, Singleton, Total)
    else:
        fileout.close()
